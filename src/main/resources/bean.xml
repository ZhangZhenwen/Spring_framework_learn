<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    Spring中的依赖注入
        依赖注入：
            Dependency Injection
        Ioc的作用：
            降低程序间的耦合（依赖关系）
        依赖关系的管理：
            以后都交给Spring来维护
        在当前类中需要用到其他类的对象，由Spring为我们提供，我们只需要在配置文件中说明
        依赖关系的维护：
            就称之为依赖注入。
        依赖注入：
            能注入的数据由三种：
                基本类型和string
                其他bean类型（在配置文件中活着注解配置过的bean）
                复杂类型/集合类型
            注入的方式由三种：
                使用构造函数提供
                使用set方法提供
                使用注解提供
-->
<!--    构造函数注入
        使用的标签：constructor-arg
        标签出现的位置：bean标签的内部
        标签中的属性
                给构造函数中哪个参数赋值
            type：用于指定要注入的数据的数据类型，该数据类型也时构造函数中某个或某些参数的类型
            index：用于指定要注入的数据给构造函数指定索引位置的参数赋值，索引位置是从 0 开始
            name：用于指定给构造函数指定名称的参数赋值。

            value：用于给基本类型和string类型的数据。
            ref：用于指定其他的bean类型数据，指的就是在Spring的Ioc核心容器中出现过的bean对象。

        优势：
            在获取bean对象时，注入数据是必须的操作，否则对象无法创造成功。
        弊端：
            改变类bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据时，也必须提供。

    <bean id="accountService" class="com.zhenwen.service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="泰斯特"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>
    <bean id="now" class="java.util.Date"></bean>
-->


<!--    set方法注入
        涉及的标签：property
        出现的位置：bean标签的内部
        标签的属性
            name：用于指定注入时所调用的set方法名称。
            value：用于给基本类型和string类型的数据。
            ref：用于指定其他的bean类型数据，指的就是在Spring的Ioc核心容器中出现过的bean对象。
        优势：
            创建对象时没有明确的限制，可以直接使用使用默认构造函数
        弊端：
            如果由某个成员必须有值，则获取对象是有可能set方法没有执行

    <bean id="accountService" class="com.zhenwen.service.impl.AccountServiceImpl">
        <property name="name" value="test"></property>
        <property name="age" value="21"></property>
        <property name="birthday" ref="now"></property>
    </bean>
    <bean id="now" class="java.util.Date"></bean>
-->

<!--    复杂类型/集合类型的注入
        用于给List结构集合注入的标签：
            list array set
        用于给Map结构集合注入的标签：
            map props
        结构相同，标签可以互换
-->
    <bean id="accountService" class="com.zhenwen.service.impl.AccountServiceImpl2">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>

    </bean>


</beans>